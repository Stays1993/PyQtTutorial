# Form implementation generated from reading ui file '02_29_QListWidget_APP.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QDialog, QInputDialog, QLineEdit, QMessageBox


class Ui_Dialog(QDialog):
    def setupUi(self, Dialog):
        Dialog.setObjectName("Dialog")
        Dialog.resize(549, 429)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Dialog)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.listWidget = QtWidgets.QListWidget(parent=Dialog)
        self.listWidget.setObjectName("listWidget")
        self.horizontalLayout.addWidget(self.listWidget)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.pushButton_add = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("等距更纱黑体 SC")
        font.setPointSize(16)
        font.setBold(True)
        self.pushButton_add.setFont(font)
        self.pushButton_add.setObjectName("pushButton_add")
        self.verticalLayout.addWidget(self.pushButton_add)
        self.pushButton_edit = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("等距更纱黑体 SC")
        font.setPointSize(16)
        font.setBold(True)
        self.pushButton_edit.setFont(font)
        self.pushButton_edit.setObjectName("pushButton_edit")
        self.verticalLayout.addWidget(self.pushButton_edit)
        self.pushButton_remove = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("等距更纱黑体 SC")
        font.setPointSize(16)
        font.setBold(True)
        self.pushButton_remove.setFont(font)
        self.pushButton_remove.setObjectName("pushButton_remove")
        self.verticalLayout.addWidget(self.pushButton_remove)
        spacerItem = QtWidgets.QSpacerItem(
            20,
            40,
            QtWidgets.QSizePolicy.Policy.Minimum,
            QtWidgets.QSizePolicy.Policy.Expanding,
        )
        self.verticalLayout.addItem(spacerItem)
        self.pushButton_sort = QtWidgets.QPushButton(parent=Dialog)
        font = QtGui.QFont()
        font.setFamily("等距更纱黑体 SC")
        font.setPointSize(16)
        font.setBold(True)
        self.pushButton_sort.setFont(font)
        self.pushButton_sort.setObjectName("pushButton_sort")
        self.verticalLayout.addWidget(self.pushButton_sort)
        self.horizontalLayout.addLayout(self.verticalLayout)

        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # connected signal
        self.pushButton_add.clicked.connect(self.add_item)
        self.pushButton_edit.clicked.connect(self.edit_item)
        self.pushButton_remove.clicked.connect(self.remove_item)
        self.pushButton_sort.clicked.connect(self.sort_item)

    def add_item(self):
        # 获取列表中的当前行
        row = self.listWidget.currentRow()

        title = "添加内容"

        # 从对话框中获取内容
        data, ok = QInputDialog.getText(self, title, title)

        if ok and data is not None:
            # 在列表中插入内容
            self.listWidget.insertItem(row, data)

    def edit_item(self):
        # 获取列表中的当前行
        row = self.listWidget.currentRow()
        # 根据行获取项
        item = self.listWidget.item(row)

        if item is not None:
            title = "编辑内容"
            # 从对话框中获取编辑过的内容
            data, ok = QInputDialog.getText(
                self, title, title, QLineEdit.EchoMode.Normal, item.text()
            )
            if ok and data is not None:
                # 设置项的内容
                item.setText(data)

    def remove_item(self):
        # 获取列表中的当前行
        row = self.listWidget.currentRow()
        # 根据行获取项
        item = self.listWidget.item(row)

        if item is None:
            return
        # 弹出确认框
        reply = QMessageBox.question(
            self,
            "删除项目",
            "确定要删除吗？",
            QMessageBox.StandardButton.Yes | QMessageBox.StandardButton.No,
        )
        if reply == QMessageBox.StandardButton.Yes:
            # 根据行删除项
            self.listWidget.takeItem(row)

    def sort_item(self):
        self.listWidget.sortItems()

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.pushButton_add.setText(_translate("Dialog", "添加"))
        self.pushButton_edit.setText(_translate("Dialog", "编辑"))
        self.pushButton_remove.setText(_translate("Dialog", "删除"))
        self.pushButton_sort.setText(_translate("Dialog", "排序"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec())
